%[=
macro :features do
	verb = (@name == :features) ? "Implemented" : "Fixed"
	total = @node.children[0].children.length
	interpret %{
		section[
			@title[#{total} #{@name.to_s.capitalize} #{verb}]
			table[
				tr[
					th[ID]
					th[Description]
				]
				#{@node.value}
			]
		]
	}
end

macro_alias :bugs => :features
=]
rw:[release|
	section[
		@title[v{{0}} &ndash; {{1}}]
		{{2}}
	]
]
rw:[issue|
	tr[
		td[\.=>[http://github.com/h3rald/glyph/issues/closed#issue/{{0}}|#{{0}}]]
		td[txt[{{1}}]]
	]
]
?[%[lite?]|
	%:[%>|"#{value} macro"]
	%:[#>|"#{value} command"]
	%:[$>|"#{value} setting"]
]
release[0.4.0|???|
	features[
		issue[40|![stats command]]
		issue[73|![online links validation]]
		issue[112|![wkhtmltopdf]]
		issue[114|![multiple file output]]
		issue[115|![layout macros]]
		issue[120|![html5]]
		issue[135|![link stylesheets]]
		issue[138|![macro inheritance]]
		issue[142|![navigation macros]]
		issue[143|![topic based toc]]
		issue[144|!["within" validators]]
		issue[147|![stylesheets compatible with html5]]
		issue[148|![customization enhancement]]
	]
	bugs[
		issue[133|![html charset]]
		issue[136|![utils module refactoring]]
		issue[139|![configuration refactoring]]
		issue[140|![macro helpers]]
		issue[141|![non-rb files loaded with macros]]
		issue[145|![bundler conflicts]]
	]
]
release[0.3.0|June 13th 2010|
	features[
		issue[39|A new #>[outline] is available to display the document outline.]
		issue[110|It is now possible to use Glyph language to produce arbitrary XML code.]
		issue[111|System settings are now stored within a @system.*@ namespace and cannot be changed via the %>[config:] or the #>[config].]
		issue[116|It is now possible to use named attributes within Glyph macros.]
		issue[119|#[new_parser]A new parser was implemented from scratch to improve performance. Treetop gem no longer required.]
		issue[121|Some macros have been removed in favor of XML fallback, others have been updated.]
		issue[123|The SyntaxNode class has been specialized to differentiate between macros, attributes, parameters, text and escapes.]
		issue[124|Implemented new %>[article] and %>[book].]
		issue[126|A new %>[rewrite:] has been implemented to create simple macros using just Glyph code.]
		issue[127|A new %>[alias] has been implemented to create macro aliases.]
		issue[128|A blacklist for XML tags has been exposed via the $>[language.options.xml_blacklist].]
		issue[129|The %>[include] can now be used in lite mode, it can evaluate ruby files and requires relative paths.]
		issue[130|A new "safe mode" has been implemented to explicitly forbid certain potentially unsafe macros.]
	]
	bugs[
		issue[109|Performance has been dramatically improved by implementing a parser from scratch (see =>[#new_parser|#119])]
		issue[122|Macro encoding/decoding no longer necessary due to the new parser (see =>[#new_parser|#119])]
		issue[125|Warning messages have been streamlined.]
	]
]
release[0.2.0|May 9th 2010|
	features[
		issue[62|A new %>[highlight] is available to highlight source code (CodeRay or UltraViolet required).]
		issue[76|It is now possible to use Glyph programmatically via the new @Glyph#filter@ and @Glyph#compile@ methods.]
		issue[87|It is now possible to define snippets inside a Glyph source file using the %>[snippet:].]	
		issue[88|It is now possible to change configuration settings inside a Glyph source file using the %>[config:] (Jabbslad).]	
		issue[89|It is now possible to compile a single Glyph source file without creating a Glyph project.]
		issue[92|6 new macros have been defined to allow conditional processing (\.%>[condition], %>[eq], %>[not], %>[and], %>[or], %>[match])]
		issue[94|It is now possible to add _validators_ to macros, for example to check the number of parameters they take.]
		issue[97|The #>[compile] command can now take an extra @--auto@ switch to trigger document auto-regeneration whenever a source file is changed (koraktor).]
		issue[99|Added a @document.draft@ setting. If set to @true@, comments and TODOs are rendered in output files.]
		issue[100|#[system_css]Glyph CSS files are no longer copied to new projects, but they can be referenced as if they were (see also =>[#css_not_copied|#93]).]
		issue[108|It is now possible to define Glyph macros within Glyph source files using the %>[macro:].]
	]
	bugs[
		issue[86|Warning and error messages have been updated, and it is now possible to show additional debug information. Additionally, syntax errors are now handled before the document is processed.] 
		issue[93|#[css_not_copied]Default css files were not copied when creating a new project. The issue has been resolved by allowing the %>[style] to reference Glyph's system styles (see also =>[#system_css|#100]).]
		issue[95|The #>[config] did not save data to YAML configuration files. This has been fixed ensuring that internal configuration overrides are not saved to the YAML file too.]
		issue[98|Glyph is now fully compatible with Ruby 1.9.1 and JRuby 1.4.0.]
		issue[101|Additional tests have been developed to improve Textile support. There should no longer be errors when using textile block elements inside Glyph macros.]
		issue[103|Fixed a bug that caused test failures when deleting the test project directory.]
		issue[104|Nested Glyph macros calling @Macro#interpret@ no longer ignore escape delimiters.]
		issue[107|Added the possibility to encode (using the @encode@ macro) and decode (using the @decode@ macro) macros so that they can be interpreted later.]
	]
]
release[0.1.0|April 8th 2010|
	Initial release.
]
