	ref_macro[
		@n[markdown]
		@desc[
Uses a Markdown converter (BlueCloth, RDiscount, Maruku or Kramdown) to transform the value into HTML if the $>[filters.target] is set to @html@.

&[called_on_files] with a @.markdown@ or a @.md@ extension. 
		]
		@aliases[md]
		@example[=markdown[This is *emphasized* text.]=]
		@params[-p[0|The Markdown text to filter.]]
	]

	ref_macro[
		@n[textile]
		@desc[
Uses the RedCloth gem to transform the value into HTML or LaTeX, depending on the value of the $>[filters.target].

&[called_on_files] with a @.textile@ or a @.txt@ extension. 
		]
		@aliases[txt]
		@example[=textile[This is a *strong emphasis*.]=]
		@params[-p[0|The Textile text to filter.]]
	]

	ref_macro[
		@n[highlight]
		@desc[Highlights a piece of source code (second parameter) according to the specified language (first parameter). fmi[code highligting|#source_code].]
		@block_example[=
highlight[ruby\|
  def hello
    puts "Hello World"
  end
]
		=]
	]
